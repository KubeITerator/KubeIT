apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: {{kubeit.workflow.nameprefix}} # Default: "kubeit-test"
  namespace: kubeit
  labels:
    project: {{kubeit.project.name}}
spec:
# Volume definition, requirement is a 'ReadWriteMany' StorageClass
  serviceAccountName: argo
  volumeClaimTemplates:
  - metadata:
      name: {{kubeit.volume.volumename}} # Default: "kubeit"
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: {{kubeit.volume.storageclass}} # Default: "managed-nfs-storage"
      resources:
        requests:
          storage: {{kubeit.volume.size}} # Default: "20Gi"
# Input arguments/parameters
  arguments:
   parameters:
    - name: INPUTDATA
      value: {{kubeit.input.inputdata}}
    - name: VOLUMENAME
      value: {{kubeit.volume.volumename}} # Default: "kubeit"
    - name: INITCOMMAND
      value: {{kubeit.init.command}} # Default: "mkdir /data/database/; mkdir /data/output; makeblastdb -in /data/inputfile -out /data/database/db -dbtype prot -hash_index"
    - name: INITIMAGE
      value: {{kubeit.init.image}} # Default: "ncbi/blast:2.11.0"
    - name: SPLITTERIMAGE
      value: {{kubeit.splitter.image}} # Default: "stanni/biosplitter:v0.0.3"
    - name: SPLIT-PARAMS
      value: |
       {{kubeit.splitter.params}}
    - name: WORKLOADIMAGE
      value: {{kubeit.workload.command}} # Default: "stanni/alpine-blastp:v0.0.1"
    - name: WORKLOADCOMMAND
      value: {{kubeit.workload.command}} # Default: "blastp -query /inputs/inputfile.faa -db /data/database/db -num_alignments 20000 -comp_based_stats 0 -seg no -outfmt 6 -evalue 1e-05 -out /data/output/output.result"
    - name: COLLECTORIMAGE
      value: "alpine:latest"
    - name: COLLECTORCOMMAND
      value: "exit"
    - name: RESULTNAME
      value: "output"

  entrypoint: workflow
  podGC:
    strategy: OnPodSuccess

  # Workflow template, consists of multiple workflow template definitions
  # Default: init (pre-processing) -> splitter -> workload -> collection (post-processing)
  templates:
  - name: workflow
    steps:
      - - name: init
          templateRef:
            name: init-template
            template: init
          arguments:
            parameters:
            - name: INPUTDATA
              value: "{{workflow.parameters.INPUTDATA}}"
            - name: COMMAND
              value: "{{workflow.parameters.INITCOMMAND}}"
            - name: VOLUMENAME
              value: "{{workflow.parameters.VOLUMENAME}}"
            - name: IMAGE
              value: "{{workflow.parameters.INITIMAGE}}"
        - name: splitter
          templateRef:
            name: splitter-template
            template: splitter
          arguments:
            parameters:
            - name: DATASOURCE
              value: "{{workflow.parameters.INPUTDATA}}"
            - name: IMAGE
              value: "{{workflow.parameters.SPLITTERIMAGE}}"
            - name: SPLITPARAMS
              value: "{{workflow.parameters.SPLIT-PARAMS}}"
      - - name: workloads
          templateRef:
            name: main-template
            template: main
          arguments: 
            parameters:
            - name: IMAGE
              value: "{{workflow.parameters.WORKLOADIMAGE}}"
            - name: INPUTDATA
              value: "{{workflow.parameters.INPUTDATA}}"
            - name: COMMAND
              value: "{{workflow.parameters.WFCOMMAND}}"
            - name: VOLUMENAME
              value: "{{workflow.parameters.VOLUMENAME}}"
            - name: INDEX
              value: "{{item.index}}"
            - name: HEADER
              value: "{{item.range}}"
          withParam: "{{steps.splitter.outputs.result}}"
      - - name: collection
          templateRef:
            name: collector-template
            template: collector
          arguments:
            parameters:
             - name: VOLUMENAME
               value: "{{workflow.parameters.VOLUMENAME}}"
             - name: IMAGE
               value: "{{workflow.parameters.COLLECTORIMAGE}}"
             - name: RESULTNAME
               value: "{{workflow.parameters.RESULTNAME}}"

