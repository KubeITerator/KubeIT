syntax = "proto3";

package kubeit.v1beta1.user;

option go_package = "github.com/KubeITerator/KubeIT/pkg/grpc/user";

import "pkg/dependencies/google/api/annotations.proto";
import "pkg/grpc/common.proto";
import "pkg/dependencies/tagger/tagger.proto";


service ClientService {
  rpc CreateToken (TokenRequest) returns (Token){
    option (google.api.http) = {
      post: "/v1/client/{client_id}"
      body: "*"
    };
  };

  rpc GetToken (ClientTokenIDRequest) returns (TokenStatus){
    option (google.api.http) = {
      get: "/v1/client/{client_id}"
    };
  };

  rpc GetTokenStatusList (UserIDRequest) returns (TokenStatusList){
    option (google.api.http) = {
      get: "/v1/client/{client_id}/list"
    };
  };

  rpc DeleteToken (ClientTokenIDRequest) returns (kubeit.v1beta1.common.StatusReport) {
    option (google.api.http) = {
      delete: "/v1/client/{client_id}/token/{token_id}"
    };
  };

  rpc GetClient (ClientIDRequest) returns (Client){
    option (google.api.http) = {
      get: "/v1/client/{client_id}"
    };
  };

  rpc GetClientInfo (ClientIDRequest) returns (ClientInfo){
    option (google.api.http) = {
      get: "/v1/client/{client_id}/info"
    };
  };

  rpc DeleteClient (ClientIDRequest) returns (kubeit.v1beta1.common.StatusReport) {
    option (google.api.http) = {
      delete: "/v1/client/{client_id}"
    };
  };

}

message ClientIDRequest {
  string client_id = 1;
}

message TokenIDRequest{
    string token_id = 1;
}

message ClientTokenIDRequest{
  string token = 1;
  string client_id = 2;
}

message TokenRequest {
  string client_id = 1;
  string token_name = 2;
}

message Token {
  string id = 1;
  string userid = 2;
  string name = 3;
  string token = 4;
  string last_accessed = 5;
  string from = 6;
}

message TokenStatusList{
  repeated TokenStatus tokens = 1;
}

message TokenStatus {
  string id = 1;
  string name = 2;
  string last_accessed = 3;
  string from = 4;
}

message Client {
  string id = 1;
  string name = 3;
  string email = 4;
  bool admin = 5;
  repeated Token tokens = 6;
}

message ClientInfo {
  string id = 1;
  string name = 3;
  string email = 4;
  bool admin = 5;
}
