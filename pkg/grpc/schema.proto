syntax = "proto3";

package kubeit.v1beta1.schema;

option go_package = "github.com/KubeITerator/KubeIT/pkg/grpc/schema";


import "pkg/dependencies/google/api/annotations.proto";
import "pkg/grpc/common.proto";
import "pkg/dependencies/tagger/tagger.proto";


service SchemaManagementService {
  rpc CreateSchema (Schema) returns (kubeit.v1beta1.common.StatusReport){
    option (google.api.http) = {
      post: "/v1/schema"
      body: "*"
    };
  };

  rpc GetSchema (v1alpha2.common.IDRequest) returns (kubeit.v1beta1.common.StatusReport){
    option (google.api.http) = {
      get: "/v1/schema/{id}"
    };
  };

  rpc DeleteSchema (v1alpha2.common.IDRequest) returns (kubeit.v1beta1.common.StatusReport) {
    option (google.api.http) = {
      delete: "/v1/schema/{id}"
    };
  };
}



message Volumes {
  string volume_name = 1;
  string size = 2;
  string storage_class = 3;
}

message Parameters {
  string name = 1;
  string default = 2;
  bool required = 3;
}

message Inputfiles {
  string name = 1;
  string type = 2;
}

message Arguments {
  string name = 1;
  string value = 2;
  string type = 3;
}

message Iterator {
  string type = 1;
  string from = 2;
  string parameters = 3;
}

message Tasks {
  string task_id = 1;
  string step_name = 2;
  repeated string dependencies = 3;
  repeated Arguments arguments = 4;
  Iterator iterator = 5;
  string condition = 6;
}

message Schema {
  string id = 1;
  string name = 2;
  string version = 3;
  uint32 priority = 4;
  uint32 limit = 5;
  repeated Volumes volumes = 6;
  string description = 7;
  string hash = 8;
  repeated Parameters parameters = 9;
  repeated Inputfiles inputfiles = 10;
  repeated Tasks tasks = 11;
  string yaml = 12;
}