syntax = "proto3";

package kubeit.v1beta1;
option go_package = "github.com/KubeITerator/KubeIT/pkg/grpc/api";

import "dependencies/google/api/annotations.proto";
import "grpc/schema.proto";
import "grpc/storage.proto";
import "grpc/common.proto";
import "dependencies/tagger/tagger.proto";


service WorkflowManagementService {
  rpc CreateWorkflow (Workflow) returns (kubeit.v1beta1.StatusReport){
    option (google.api.http) = {
      post: "/v1/workflow"
      body: "*"
    };
  };

  rpc GetWorkflow (kubeit.v1beta1.IDRequest) returns (kubeit.v1beta1.StatusReport){
    option (google.api.http) = {
      get: "/v1/workflow/{id}"
    };
  };

  rpc DeleteWorkflow (kubeit.v1beta1.IDRequest) returns (kubeit.v1beta1.StatusReport) {
    option (google.api.http) = {
      delete: "/v1/workflow/{id}"
    };
  };

  rpc GetStatus (kubeit.v1beta1.IDRequest) returns (WorkflowStatus) {
    option (google.api.http) = {
      get: "/v1/workflow/{id}/status"
    };
  };
}


message Parameter {
  string name = 1;
  string value = 2;
}

message Workflow {
  string id = 1;
  string name = 2;
  string template_id = 3;
  string hash = 4;
  repeated Parameter parameter = 5;
  repeated kubeit.v1beta1.InputFile inputfiles = 6;
  WorkflowStatus status = 7;
}

message WorkflowStatus {
  string workflow_id = 1;
  string project = 2;
  string status = 3;
  uint32 pods_total = 4;
  uint32 pods_finished = 5;
  uint32 number_of_results = 6;
}