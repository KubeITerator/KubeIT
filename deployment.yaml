apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeit-serviceaccount
---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubeit-admin-role
rules:
  - apiGroups: [""]
    resources: ["pods", "configmaps"]
    verbs: ["get", "list", "create", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: [ "argoproj.io" ]
    resources: [ "workflows" ]
    verbs: [ "get", "list", "create", "update", "patch", "delete", "deletecollection" ]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeit-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeit-admin-role
subjects:
  - kind: ServiceAccount
    name: kubeit-serviceaccount

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeit
  labels:
    app: kubeit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeit
  template:
    metadata:
      labels:
        app: kubeit
    spec:
      serviceAccountName: kubeit-serviceaccount
      containers:
        - name: kubeit
          image: stanni/kubeit:v0.0.1
          ports:
            - containerPort: 9999
          envFrom:
            - secretRef:
                name: kubeit-token
                optional: false
            - secretRef:
                name: s3secret
                optional: false
            - configMapRef:
                name: kubeit-settings

---

apiVersion: v1
kind: Service
metadata:
  name: kubeit-service
spec:
  selector:
    app: kubeit
  ports:
    - protocol: TCP
      port: 443
      targetPort: 9999
